Sinbad - (Automated Structure Inference and Binding of Data)
============================================================

Sinbad is a software library that makes it very easy to
uniformly access online data sources provided in standard
formats (CSV, JSON, XML). For more info, please visit:

http://berry-cs.github.io/sinbad



Example 1
---------

Consider the following program, which connects to the
FAA live feed of airport status information:

    (require sinbad)

    (define faa
      (sail-to (string-append "http://services.faa.gov/airport/status/ATL?format=application/xml")
	       (cache-timeout 300)  ; refresh every 5 minutes
	       (manifest)           ; display schema for available data upon load
	       (load)))

    (define-struct port (name loc condition delay?))

    (fetch faa (make-port "Name" "State" "Weather/Weather" "Delay"))


Running this program should produce a value like:

    (make-port "Hartsfield-Jackson Atlanta International" "Georgia" "Fair" #false)


Example 2
---------

The following program connects to the USGS live feed of earthquake
events:

    (require sinbad)
    
    (define Q
      (sail-to "http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_day.geojson"
               (cache-timeout 180)))

    (define-struct quake (place time mag))

    (load Q)   ; can (re)load on demand anytime
    (fetch Q (make-quake "place" "time" "mag") (base-path "features/properties"))    
    (fetch-first Q "features/properties")

Note that the first fetch produces a list of instances of a *user-defined* quake structure. The second form produces an association list.


